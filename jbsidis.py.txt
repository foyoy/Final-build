#:import style style

#:import toast kivymd.toast.toast
#:import get_color_from_hex kivy.utils.get_color_from_hex


MDBottomNavigationItem:
    id: rootx
    MDBottomNavigation:
        id: J
        md_bg_color: get_color_from_hex("#eeeaea")

        MDBottomNavigationItem:
            name: "camera"
            icon: "camera"
            text: "Camera"

            MDFloatingActionButtonSpeedDial:
                data: app.data
                callback: app.callback
                root_button_anim: True

            ScreenCamera:
                ColourShaderWidget:
                    id: shader_widget
                    CameraDisplayWidget:
                        id: cdw
                        texture: app.texture
                        resolution: app.camera_resolution         

        MDBottomNavigationItem:
            name: "test"
            icon: "table-headers-eye"
            text: "Colorblind Test"
            on_tab_release: app.testInstruction()

            FloatLayout:
                id: fl
                RecycleView:
                    id: rv5
                    key_viewclass: "viewclass"
                    RecycleGridLayout:
                        id: s56
                        padding: dp(10)
                        cols: 2
                        default_size: None, dp(300)
                        padding: dp(0), dp(0)
                        default_size_hint: 1, None
                        size_hint_y: None
                        height: self.minimum_height
                        spacing: dp(10)
                        pos_hint: None, None     

        MDBottomNavigationItem:
            name: "theme"
            icon: "theme-light-dark"
            text: "Theme"

            FloatLayout:
                MDLabel:
                    id: theme
                    text: "Toggle to Switch Theme Style"
                    halign: 'center'
                    theme_text_color: "Custom"
                    text_color: 0, 0, 0, 1,
                MDSwitch:
                    active: False
                    widget_style: "ios"
                    pos_hint: {'center_x': .5, 'center_y': .4}
                    on_active: app.switchTheme(self, self.active)


<B_@BoxLayout>:
    orientation: "vertical"
    canvas.after:
        Color:
            rgba: [0,0,0,0]
        Line:
            width: dp(1.2)
            rounded_rectangle:
                (self.x, self.y, self.width, self.height+dp(50),\
                dp(9),dp(9),dp(9),dp(9),\
                dp(50))


<ScreenCamera>:
    name: "cax"
    orientation: "vertical"
    ColourShaderWidget:
        id: shader_widget
        CameraDisplayWidget:
            id: cdw
            texture: app.texture
            resolution: app.camera_resolution
    MDFloatingActionButtonSpeedDial:
        data: self.data
        root_button_anim: True

<OpenCameraButton>:
    active: app.current_camera is None and app._camera_permission_state_string not in ("UNKNOWN", "AWAITING_REQUEST_RESPONSE")
    text: "Press to open camera stream"
    font_size: dp(23)
    size_hint: None, None
    size: self.texture_size[0] + dp(30), self.texture_size[1] + dp(30)
    opacity: 0 if app.current_camera is not None else 1
    on_release: app.attempt_stream_camera(app.cameras_to_use[0])
    pos_hint: {"center_x": 0.5, "center_y": 0.5}

<CameraDisplayWidget>:
##    canvas:
##        Color:
##            rgba: 1, 1, 1, 1
##        Rectangle:
##            pos: self._rect_pos
##            size: self._rect_size
##            texture: self.texture
##            tex_coords: root.tex_coords
    canvas.before:
        PushMatrix:
        Rotate:
            angle: -90
            origin: self.center
        Color:
            rgba: 0,0,0, 1
        Rectangle:
            pos: self._rect_pos #self.pos
            size: self._rect_size #self.size
            texture: self.texture
            tex_coords: root.tex_coords
    canvas.after:
        PopMatrix:

#FitImage
<ImageButton@ButtonBehavior+Image>

<Boxa>:
    MDSpinner:
        

<ImageManager>
    path: ""
    orientation: "vertical"
    size_hint_y: None
    height: root.height
    padding: dp(10)


    ImageButton:
        source: root.path
        on_release:
            app.root.ids.J.current="test"
            app.barra()
            app.root.ids.s56.cols=2
            
<ImageManagerx>
    path: ""
    orientation: "vertical"
    size_hint_y: None
    height: root.height
    padding: dp(10)
    ImageButton:
        source: root.path
        
<Ja@SmartTileWithLabel>: 
<K>:
    MDSpinner:
        size_hint: None, None
        size: dp(30), dp(30)
        color: get_color_from_hex("#0096FF")
        pos_hint: {'center_x': .5, 'center_y': .5}


#:import Clock kivy.clock.Clock
<I2>:
    orientation: "vertical"

    ImageButton:
        source: root.source1
        on_release:
            app.test = app.test + "@@" +str(root.type)
            print(root.type)
            root.add_widget(app.K())
            Clock.schedule_once(lambda x:app.mex(root),2)

  
